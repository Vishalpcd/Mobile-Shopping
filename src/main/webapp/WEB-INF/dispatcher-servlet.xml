<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans.xsd
   http://www.springframework.org/schema/context
   http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/mvc
   http://www.springframework.org/schema/mvc/spring-mvc.xsd">
   <!-- mvc is added for adding bootstrap styling -->
	
   
	<!-- To scan the controller class from the package as the given below -->
	<context:component-scan base-package="com.niit.MobileShopping" />
	<!-- before adding this package frontend project cannot find the package of backend thats why it is showing the exception -->
	<context:component-scan base-package="com.niit.MobileShoppingBackend" />
		
	
	<!-- configuring internal viewresolver i.e technology used for scanning the view i.e pages  -->
	<!-- it will internally search for the view that are required for the processing it also indicates that where to scan all the 
	 views .i.e the  mapping of the views like extension  -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- From where and what type of extension controller class has to search is defined below  -->
		<property name="prefix" value="/WEB-INF/views/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	<!-- bean for multipart i.e multimedia files  -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver"></bean>
	<!-- Loading static rsources i.e images where they are located-->
	<mvc:annotation-driven></mvc:annotation-driven>
	<!-- locating and mapping the mvc resources i.e static resources like images,css,js,and other static files  -->
	<mvc:resources location="/assets/" mapping="/resources/**"></mvc:resources>
	

</beans>

