Erorrs at firts time: After changing the version of web app to 2.3 to 3.1 the context of this application gets created one more time in the server.xml in server.
Error result: the server was not starting it was showing that the MobileShopping application has one duplicate context.
Error Solution:In server->server.xml file after scrolling at last there are all context of all projects  are included 
and there were two same context statement of my project was there
after removing one of them and trying again to start the server and then after it server get started.
Error at Second time:After running one more time the server gets stopped after starting and this
time simple  error message was there.
Solution:Right click on  the server in the view tab->cleaned the server and then started the 
server and then it get started. 
@RequestParam: After adding simple RequstParam Annotation with some value then it will only open 
if user passes any value in the url box if he doesn't passes any value then it will show you an 
error 404 error
Solution:to avoid this add the required=false then it will not show any error 
it will print nothing with blank page 
@PathVariable:To take any value by using forward slash then the value, for this we have to use
@PathVariable and and then but the issue is there in the @pathVariable that if we don't
pass any value then it will print 404 error. The project will be updated in later updates. 
that if we do not pass any value then also it has to call the page.jsp page.  


<mvc:annotation-driven/>: Tag specifies that the below code all the mapping will driven through various annotations.
<%@taglib%> is the spring tag library
<%@spring var="var_name" value="path"%>:Is used for creating variable for some specific path so that whenever we want to use any path we can use the variable name instead of of whole path
<%@include file="header.jsp"%>:Is used for merging any code which is kept in other file instead of writing any of that code.
<mvc:resources/>:Is used for defining the location of all the resources in the project.
Added our brand image in the project.
Added all required bootstrap files 

Added navigation bar with more list.
Added Category name to navigation bar in the categories and added listProducts.jsp for showing the list of the products.
Added Body padding of 65px using css. 


@Entity:
=========
This is the annotation which is used to  tell the java that you have to make this class data as data base data.
This annotation is used just above the class name 


@Id:
======
If we want to make any column name as a primary key for that table  then we need to Annotate to getter method of the variable name with @Id annotation 
NOTE:
=======
Keep in mind that we need to give Id annotation to the getter method only if you don't do that then it will not run act as primary key.

IDENTITY:
=========
 Indicates that the persistence provider must assign primary keys for the entity using database identity column.



sessionFactory.getCurrentSession():
=================================
It will return the current  session .
By using this we don't need to flush the task it autometically do it for us. 



@ControllerAdvice
=================
By default the methods in an @ControllerAdvice apply globally to all Controllers. It can be use for the data which is going to be creating the session for the user and make available all the data to be used in that session 
so that we don't need it create methods and other things every whenever we want any value



POM.XML file
=============
It contains all the dependency files which will be available used in the project this is the main feature of the 
maven project we don''t need to explicitly download  all the jar files we just need to specify the groupId,artifactId,version and 
for some files we need to provide the scope which  specifies the for what purpose it is injected in the project


File Structure 
============

It is the rule which used by many company to arrange the files and folder in some specific way so that development con be made easy.

JQuery DataTable
================
I have used the JQuery data table to show all the product details in the table format with some extra features like sorting,without header data,paging
and many more 

Image:
=======
 
We are storing the images in the project storage it self and the name is given as the product code is assingned to the each product so that it can be easy to retrieve the image in the browser and can be identifide 
easily because it is usiing the name of the image as product name for which it is assingned.


web.xml
========
web.xml contains the all the configuration files the web project like servlet dispatcher class ,where to look for the spring security ,what is the listener class,it contains mapping that will taken by the servlet in servlet mapping ,etc.


disptcher-servlet.xml file
==========================

dispatcher-servlet.xml file is used to indicate the servlet and the server to scan base packages that is where to look for the classes,images,servlet.

spring-security.xml
=================
spring-security.xml file is used to used to make secure our website with the external users to access all the resources implementing this file now it works like 
interceptor it will first check if the user has authority to access resources that are requested by the user.
<http pattern="url pattern" security="">//for securiing the resources files we can even secure our resources like javaScript files and css files 
<http>
<intercept-url pattern="url pattern" access="ROLE_USER" or access="hasAuthority('USER')">
</http>

We can even set the page which will popup when user tries to access the resources which is not assigned to him 

<access-denied-handler error-page="/error">//error is the page or view name which will be displayed at the time when user wants to access  the resources or pages that is not availablefor him.
